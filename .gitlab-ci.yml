##缓存 node_modules/目录 下次构建不会删除
cache:
  key: ${CI_BUILD_REF_NAME}
  paths:
    - node_modules/

stages:
  - build
  - run
  - clean
  - failure

build:
  stage: build
  only:
    - master #哪个分支触发
  tags:
    - node
  script:
    - pwd #打印当前目录
    - pnpm i && pnpm docs:build #打包
    - tar -zcvf .vitepress/dist/fancy-doc.tar.gz -C .vitepress/dist/ . --warning=no-file-changed && true=0 || false=1 #打包
    - version=`grep "\"version\":" package.json | cut -d"\"" -f4`
    - docker build -f docker/app/Dockerfile -t fancy/fancy-doc:$version -t fancy/fancy-doc:latest .
    - echo "docker done"

run:
  stage: run
  only:
    - master #哪个分支触发
  tags:
    - node
  script:
    - docker compose -f docker/app/docker-compose.yml up -d # 启动容器
    - echo "run done"

clean:
  stage: clean
  only:
    - master #哪个分支触发
  tags:
    - node
  script:
    - docker image prune -f # 删除为none的虚悬镜像
    - docker volume prune -f # 删除无用的卷
    - docker network prune -f # 删除无用的网络
    - echo "clean done"
    - echo "服务部署成功"

failure:
  stage: failure
  only:
    - master #哪个分支触发
  tags:
    - java
  script:
    - run when failed
    - curl -d "name=fancy服务发版失败" "https://www.fancy8963.cn/api/send"
  when: on_failure # 前一阶段任务故障时才执行
